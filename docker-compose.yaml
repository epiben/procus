version: "3.8"

services:

  starter:
    build:
      context: .
      dockerfile: Dockerfile
    command: python /app/app_starter.py
    # entrypoint: /bin/sh
    # command: -c "sleep 3600"
    # NB! No port mapped to host as this is unneeded
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - backend

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    command: python /app/app_fastapi.py
    env_file:
      - .env
    expose:
      - 5000
    ports:
      - 50000:5000
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://fastapi:5000/health || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./persistent_storage/:/persistent_storage/
    networks:
      - frontend
      - backend

  ngrok:
    image: ngrok/ngrok:latest
    command: http fastapi:5000 --authtoken="${NGROK_AUTHTOKEN}" --domain="${NGROK_SUBDOMAIN}"
    env_file:
      - .env
    ports:
      - 4040:4040
    restart: unless-stopped
    depends_on:
      fastapi:
        condition: service_healthy
        restart: true
    networks:
      - frontend

  db:
    build:
      context: postgres
      dockerfile: Dockerfile
    expose: # NB! No port mapped to host as this is unneeded
      - 5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 60s
    volumes:
      - ./postgres/.data/:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init_0.sql
      - ./postgres/add_recipients_iterations.sql:/docker-entrypoint-initdb.d/init_1.sql
    restart: unless-stopped
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
